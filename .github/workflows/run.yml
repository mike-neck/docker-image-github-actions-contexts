name: example-build

on:
  push: {}
  workflow_dispatch: {}

env:
  TARGET_USER_NAME: test
  IMAGE_NAME: image

jobs:
  lint:
    runs-on: ubuntu-22.04
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
        name: Checkout repository

      - name: GitHub Contexts
        run: |
          echo "---------"
          echo "current-dir: ${PWD}"
          echo "---------"
          echo "${JSON_VALUE}"
        env:
          JSON_VALUE: "${{ toJson(github) }}"

#      - name: Setup buildx
#        uses: docker/setup-buildx-action@v3

      - name: Prepare env
        id: prepare-env
        run: |
          echo "PREPARE_TARGET=$(uname -a)" >> "${GITHUB_ENV}"
          echo "G_ENV_VALUES=${GITHUB_ENV}" >> "${GITHUB_ENV}"
          declare EMPTY=""
          echo "emptyValue=${EMPTY}" >> "${GITHUB_OUTPUT}"
          echo "nonEmptyValue=$(uname -a)" >> "${GITHUB_OUTPUT}"

      - name: Random Challenge
        run: true || echo "RANDOM_CHALLENGE=ok" | tee "${GITHUB_ENV}"

      - name: Test Challenge
        run: echo "${RANDOM_CHALLENGE}"
        if: ${{ env.RANDOM_CHALLENGE }}

      - name: Test Empty is empty
        run: echo "empty is empty"
        if: ${{ !steps.prepare-env.outputs.emptyValue }}

      - name: Test Empty is not empty
        run: echo "empty is not empty"
        if: ${{ steps.prepare-env.outputs.emptyValue }}

      - name: Test Non Empty is empty
        run: echo "none empty is empty"
        if: ${{ !steps.prepare-env.outputs.nonEmptyValue }}

      - name: Test Non Empty is not empty
        run: echo "none empty is not empty"
        if: ${{ steps.prepare-env.outputs.nonEmptyValue }}

#      - uses: docker/build-push-action@v5
#        name: Build an image then push it to GitHub registry
#        with:
#          context: .
#          file: example/Dockerfile
#          platforms: linux/amd64
#          push: false

#      - uses: hadolint/hadolint-action@v3.1.0
#        name: Runs hadolint



